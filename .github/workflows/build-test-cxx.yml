name: 'Build, Test, Package ITK Remote Module'

on:
  workflow_call:
    inputs:
      cmake-options:
        required: false
        type: string
      ctest-options:
        required: false
        type: string
      itk-cmake-options:
        required: false
        type: string
      itk-git-tag:
        required: false
        type: string
        default: '171fb2ba33a87041f99328a2f26612ff33aa9cc8'

jobs:
  build-test-cxx:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        include:
          - os: ubuntu-20.04
            c-compiler: "gcc"
            cxx-compiler: "g++"
            cmake-build-type: "MinSizeRel"
          - os: windows-2019
            c-compiler: "cl.exe"
            cxx-compiler: "cl.exe"
            cmake-build-type: "Release"
          - os: macos-11
            c-compiler: "clang"
            cxx-compiler: "clang++"
            cmake-build-type: "MinSizeRel"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ninja

    - name: Get specific version of CMake, Ninja
      uses: lukka/get-cmake@v3.18.3

    - name: Download ITK
      run: |
        cd ..
        git clone https://github.com/InsightSoftwareConsortium/ITK.git
        cd ITK
        git checkout ${{ inputs.itk-git-tag }}

    - name: Build ITK
      if: matrix.os != 'windows-2019'
      run: |
        cd ..
        mkdir ITK-build
        cd ITK-build
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DBUILD_TESTING:BOOL=OFF ${{ inputs.itk-cmake-options }}  -GNinja ../ITK
        ninja

    - name: Build ITK
      if: matrix.os == 'windows-2019'
      run: |
        cd ..
        mkdir ITK-build
        cd ITK-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DBUILD_TESTING:BOOL=OFF ${{ inputs.itk-cmake-options }}  -GNinja ../ITK
        ninja
      shell: cmd

    - name: Fetch CTest driver script
      run: |
        curl -L https://raw.githubusercontent.com/InsightSoftwareConsortium/ITK/dashboard/itk_common.cmake -O

    - name: Configure CTest script
      shell: bash
      run: |
        operating_system="${{ matrix.os }}"
        cat > dashboard.cmake << EOF
        set(CTEST_SITE "GitHubActions")
        file(TO_CMAKE_PATH "\$ENV{GITHUB_WORKSPACE}/.." CTEST_DASHBOARD_ROOT)
        file(TO_CMAKE_PATH "\$ENV{GITHUB_WORKSPACE}/" CTEST_SOURCE_DIRECTORY)
        file(TO_CMAKE_PATH "\$ENV{GITHUB_WORKSPACE}/../build" CTEST_BINARY_DIRECTORY)
        set(dashboard_source_name "${GITHUB_REPOSITORY}")
        if((ENV{GITHUB_REF_NAME} MATCHES "master" OR ENV{GITHUB_REF_NAME} MATCHES "main"))
          set(branch "-master")
          set(dashboard_model "Continuous")
        else()
          set(branch "-${GITHUB_REF}")
          set(dashboard_model "Experimental")
        endif()
        set(CTEST_BUILD_NAME "${GITHUB_REPOSITORY}-${operating_system}-\${branch}")
        set(CTEST_UPDATE_VERSION_ONLY 1)
        set(CTEST_TEST_ARGS \${CTEST_TEST_ARGS} PARALLEL_LEVEL \${PARALLEL_LEVEL})
        set(CTEST_BUILD_CONFIGURATION "Release")
        set(CTEST_CMAKE_GENERATOR "Ninja")
        set(CTEST_CUSTOM_WARNING_EXCEPTION
          \${CTEST_CUSTOM_WARNING_EXCEPTION}
          # macOS Azure VM Warning
          "ld: warning: text-based stub file"
          )
        set(dashboard_no_clean 1)
        set(ENV{CC} ${{ matrix.c-compiler }})
        set(ENV{CXX} ${{ matrix.cxx-compiler }})
        if(WIN32)
          set(ENV{PATH} "\${CTEST_DASHBOARD_ROOT}/ITK-build/bin;\$ENV{PATH}")
        endif()
        set(dashboard_cache "
        ITK_DIR:PATH=\${CTEST_DASHBOARD_ROOT}/ITK-build
        BUILD_TESTING:BOOL=ON
        ${{ inputs.cmake-options }}
        ")
        string(TIMESTAMP build_date "%Y-%m-%d")
        message("CDash Build Identifier: \${build_date} \${CTEST_BUILD_NAME}")
        message("CTEST_SITE = \${CTEST_SITE}")
        include(\${CTEST_SCRIPT_DIRECTORY}/itk_common.cmake)
        EOF
        cat dashboard.cmake

    - name: Build and test
      if: matrix.os != 'windows-2019'
      run: |
        ctest --output-on-failure -j 2 -V -S dashboard.cmake ${{ inputs.ctest-options }}

    - name: Build and test
      if: matrix.os == 'windows-2019'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        ctest --output-on-failure -j 2 -V -S dashboard.cmake ${{ inputs.ctest-options }}
      shell: cmd
